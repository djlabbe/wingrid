// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wingrid.Collector;

#nullable disable

namespace Collector.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wingrid.Collector.Models.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("Attendance")
                        .HasColumnType("integer");

                    b.Property<string>("AwayScore")
                        .HasColumnType("text");

                    b.Property<string>("AwayTeamId")
                        .HasColumnType("text");

                    b.Property<bool?>("AwayWinner")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ConferenceCompetition")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayClock")
                        .HasColumnType("text");

                    b.Property<string>("HomeScore")
                        .HasColumnType("text");

                    b.Property<string>("HomeTeamId")
                        .HasColumnType("text");

                    b.Property<bool?>("HomeWinner")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool?>("NeutralSite")
                        .HasColumnType("boolean");

                    b.Property<int?>("Period")
                        .HasColumnType("integer");

                    b.Property<bool?>("PlayByPlayAvailable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Recent")
                        .HasColumnType("boolean");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<string>("SeasonSlug")
                        .HasColumnType("text");

                    b.Property<int?>("SeasonType")
                        .HasColumnType("integer");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<bool?>("StatusCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("text");

                    b.Property<string>("StatusDetail")
                        .HasColumnType("text");

                    b.Property<string>("StatusId")
                        .HasColumnType("text");

                    b.Property<string>("StatusName")
                        .HasColumnType("text");

                    b.Property<string>("StatusShortDetail")
                        .HasColumnType("text");

                    b.Property<string>("StatusState")
                        .HasColumnType("text");

                    b.Property<bool?>("TimeValid")
                        .HasColumnType("boolean");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Wingrid.Collector.Models.Team", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("text");

                    b.Property<string>("AlternateColor")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsAllStar")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<string>("ShortDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Wingrid.Collector.Models.Event", b =>
                {
                    b.HasOne("Wingrid.Collector.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId");

                    b.HasOne("Wingrid.Collector.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId");

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });
#pragma warning restore 612, 618
        }
    }
}
