// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wingrid.Services.FixtureAPI.Data;

#nullable disable

namespace Wingrid.Services.FixtureAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231127061316_AddEventIdToEventEntry")]
    partial class AddEventIdToEventEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wingrid.Services.FixtureAPI.Models.Entry", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("FixtureId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Tiebreaker")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "FixtureId");

                    b.HasIndex("FixtureId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("Wingrid.Services.FixtureAPI.Models.Fixture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("EventIds")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TiebreakerEventId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fixtures");
                });

            modelBuilder.Entity("Wingrid.Services.FixtureAPI.Models.Entry", b =>
                {
                    b.HasOne("Wingrid.Services.FixtureAPI.Models.Fixture", "Fixture")
                        .WithMany()
                        .HasForeignKey("FixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Wingrid.Services.FixtureAPI.Models.EventEntry", "EventEntries", b1 =>
                        {
                            b1.Property<string>("EntryUserId")
                                .HasColumnType("text");

                            b1.Property<int>("EntryFixtureId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("EventId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<bool?>("HomeWinner")
                                .HasColumnType("boolean");

                            b1.Property<bool>("HomeWinnerSelected")
                                .HasColumnType("boolean");

                            b1.HasKey("EntryUserId", "EntryFixtureId", "Id");

                            b1.ToTable("EventEntry");

                            b1.WithOwner()
                                .HasForeignKey("EntryUserId", "EntryFixtureId");
                        });

                    b.Navigation("EventEntries");

                    b.Navigation("Fixture");
                });
#pragma warning restore 612, 618
        }
    }
}
